name: audit-lint-bump
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: rust-audit-check
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        name: cargo-fmt
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        name: cargo-clippy
        with:
          command: clippy
          args: -- -Dwarnings

  bump:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    name: bump
    needs:
      - audit
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/cache@v3
        with:
          path: ~/.cache/
          key: commitizen==3.2.2

      - name: install-commitizen
        run: |
          python3 -m pip install commitizen==3.2.2

      - name: get-branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: validate-commits
        if: github.ref != 'refs/heads/main'
        run: |
          cz check --rev-range origin/main..

          echo "prerelease=--prerelease=rc" >>"${GITHUB_ENV}"
          echo "devrelease=--devrelease=${GITHUB_RUN_ID}" >>"${GITHUB_ENV}"

      - name: commitizen
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

          cz --name cz_customize bump --check-consistency --yes ${prerelease} ${devrelease}

      - name: git-push
        run: |
          REMOTE_REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
          git push "${REMOTE_REPO}" "HEAD:${GITHUB_REF#refs/heads/}" --tags
